name: "GLPI test code coverage"

on:
  # Enable execution from the "Code coverage schedule" workflow
  workflow_call:
    inputs:
      branch:
        required: true
        type: string
  # Enable manual run
  workflow_dispatch:
    inputs:
      branch:
        description: "Target branch"
        required: true
        type: string

jobs:
  coverage:
    name: "Code coverage"
    runs-on: "ubuntu-latest"
    strategy:
      fail-fast: false
      matrix:
        include:
          - {php-version: "8.2", db-image: "mariadb:11.0"}
    env:
      COMPOSE_FILE: ".github/actions/docker-compose-app.yml:.github/actions/docker-compose-services.yml"
      APPLICATION_ROOT: "${{ github.workspace }}"
      DB_IMAGE: "githubactions-${{ matrix.db-image }}"
      PHP_IMAGE: "githubactions-php-coverage:${{ matrix.php-version }}"
      UPDATE_FILES_ACL: true
      CODE_COVERAGE: true
    steps:
      - name: "Set env"
        run: |
          echo "APP_CONTAINER_HOME=${{ runner.temp }}/app_home" >> $GITHUB_ENV
      - name: "Checkout"
        uses: "actions/checkout@v4"
        with:
          ref: ${{ inputs.branch }}
      - name: "Restore dependencies cache"
        uses: actions/cache@v4
        with:
          path: |
            ${{ env.APP_CONTAINER_HOME }}/.composer/cache/
            ${{ env.APP_CONTAINER_HOME }}/.npm/_cacache/
          key: "app_home_deps-${{ matrix.php-version }}-${{ hashFiles('composer.lock', 'package-lock.json') }}"
          restore-keys: |
            app_home_deps-${{ matrix.php-version }}-
            app_home_deps-
      - name: "Initialize containers"
        run: |
          .github/actions/init_containers-start.sh
      - name: "Show versions"
        run: |
          .github/actions/init_show-versions.sh
      - name: "Build dependencies / translations"
        run: |
          docker compose exec -T app .github/actions/init_build.sh
      - name: "Install database"
        run: |
          docker compose exec -T app .github/actions/test_install.sh
      - name: "PHPUnit tests"
        run: |
          docker compose exec -T app .github/actions/test_tests-phpunit.sh
      - name: "Functional tests"
        run: |
          docker compose exec -T app .github/actions/test_tests-functional.sh
      - name: "LDAP tests"
        run: |
          .github/actions/init_initialize-ldap-fixtures.sh
          docker compose exec -T app .github/actions/test_tests-ldap.sh
      - name: "IMAP tests"
        run: |
          .github/actions/init_initialize-imap-fixtures.sh
          docker compose exec -T app .github/actions/test_tests-imap.sh
      - name: "Codecov"
        uses: "codecov/codecov-action@v5"
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
        with:
          files: ./phpunit/coverage-functional/clover.xml,./tests/coverage-functional/clover.xml,./tests/coverage-ldap/clover.xml,./tests/coverage-imap/clover.xml
          override_branch: ${{ inputs.branch }}
