{#
# ---------------------------------------------------------------------
#
# GLPI - Gestionnaire Libre de Parc Informatique
#
# http://glpi-project.org
#
# @copyright 2015-2025 Teclib' and contributors.
# @licence   https://www.gnu.org/licenses/gpl-3.0.html
#
# ---------------------------------------------------------------------
#
# LICENSE
#
# This file is part of GLPI.
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>.
#
# ---------------------------------------------------------------------
#}

{% import 'components/form/fields_macros.html.twig' as fields %}

{#
field_options est défini dans fields_panel.html.twig
field_options.fields_template est un ITILTemplate passé dans l'appel du twig dans Ticket::showForm() (param itiltemplate)
#}

{# sla display #}

{#
--- SLA display
At the moment, there is 2 sla for a ticket, defined inside the ticket fields
So there can be only 2 sla fields, one for TTO and one for TTR
if no tto : display empty field first, before existing slas
if no ttr : display empty field last, after existing slas

--- OLA display
Handle only linked ola, not ola ttr and tto defined using datetime fields

    sla & ola are instances of SLA and OLA, maybe from db, maybe empty
#}

{# mark form to handle la updates : _olas_id field should be handled in form submission #}
{{ fields.hiddenField('_la_update', 1) }}

{# --- SLA --- #}

{% set ticket_has_associated_ttr_sla = false %}
{% set ticket_has_associated_tto_sla = false %}
{% set associated_slas = item.getSlasData() %}

{% for sla in associated_slas %}
    {% if sla.type == constant('SLM::TTO') %}
        {% set ticket_has_associated_tto_sla = true %}
    {% elseif sla.type == constant('SLM::TTR') %}
        {% set ticket_has_associated_ttr_sla = true %}
    {% endif %}
{% endfor %}

<table class="table">
    <thead>
    <tr class="">
        <th class="visually-hidden"></th>
        <th class="border-0 fs-4">{{ __('SLA') }}</th>
    </tr>
    </thead>
    <tbody>

    {% if not ticket_has_associated_tto_sla %}
        <tr>
            {% set display_datetime_field  = field_options.fields_template is not defined or not field_options.fields_template.isHiddenField('time_to_own') %}
            {% set display_associatedsla_field = field_options.fields_template is not defined or not field_options.fields_template.isHiddenField('slas_id_tto') %}
            {% set can_assign_sla_ola = canupdate and has_profile_right('slm', constant('SLM::RIGHT_ASSIGN')) and not field_options.fields_template.isReadonlyField('slas_id_tto') %}

            {# @todo cleanup debug - force display #}
{#            {% set display_datetime_field  = true %}#}
{#            {% set display_associatedsla_field = true %}#}

{#            {% set _fieldname = 'time_to_own' %}#}
            <td class="right pe-2 align-middle border-0">{{ __('TTO') }}</td>
            <td class="d-flex ms-n2 border-0 py-0">

                {% set _rand = random() %}

                {# state flag #}
                <div class="align-middle my-2 me-2">
                    <i class="ti ti-flag"></i>
                </div>

                {# datetime field #}
                {% if display_datetime_field %}
                    {{ fields.DatetimeLaField(
                        'time_to_own',
                        item.fields['time_to_own'],
                        __('TTO'),
                        {
                            'rand': _rand,
                            'disabled': not can_assign_sla_ola
                        }) }}
                {% endif %}

                {# no linked tto : display add button + hidden dropdown #}
                {% if display_associatedsla_field and can_assign_sla_ola %}
                    {{ fields.LinkedLaFieldEmpty(
                        tto_sla,
                        item,
                        'slas_id_tto',
                        tto_sla.getAddConfirmation(),
                        constant('SLM::TTO'),
                        options = {
                            'can_assign': can_assign_sla_ola,
                            'rand': _rand,
                        }
                    ) }}
                    {# @todo gestion du required - 'mandatory': field_options.fields_template.isMandatoryField(la_field.lafieldname), #}
                {% endif %}
            </td>
        </tr>
    {% endif %}

    {# use slas from associated_slas and not from ttr_sla to allow easier refactoring if later, we allow multiple ola #}
    {% for sla in associated_slas %}
        <tr>
            {% if sla.type == constant('SLM::TTO') %}
                {% set display_datetime_field  = field_options.fields_template is not defined or not field_options.fields_template.isHiddenField('time_to_own') %}
                {% set display_associatedsla_field = field_options.fields_template is not defined or not field_options.fields_template.isHiddenField('slas_id_tto') %}
                {% set can_assign_sla_ola = canupdate and has_profile_right('slm', constant('SLM::RIGHT_ASSIGN')) and not field_options.fields_template.isReadonlyField('slas_id_tto') %}
                {% set _fieldname = 'time_to_own' %}
                {% set _label = __('TTO') %}
            {% elseif sla.type == constant('SLM::TTR') %}
                {% set display_datetime_field  = field_options.fields_template is not defined or not field_options.fields_template.isHiddenField('time_to_resolve') %}
                {% set display_associatedsla_field  = field_options.fields_template is not defined or not field_options.fields_template.isHiddenField('slas_id_ttr') %}
                {% set can_assign_sla_ola = canupdate and has_profile_right('slm', constant('SLM::RIGHT_ASSIGN')) and not field_options.fields_template.isReadonlyField('slas_id_ttr') %}
                {% set _fieldname = 'time_to_resolve' %}
                {% set _label = __('TTR') %}
            {% endif %}
            {% set _rand = random() %}

            {# @todo cleanup supprimer forcage de debug #}
{#            {% set display_datetime_field      = true %}#}
{#            {% set display_associatedsla_field = true %}#}

            <td class="right pe-2 align-middle border-0">{{ _label }}</td>
            <td class="d-flex ms-n2 border-0 py-0">
                {# state flag #}
                <div class="align-middle my-2 me-2">
                    <i class="ti ti-flag"></i>
                </div>

                {# datetime field + badge/dropdown field #}
                {{ fields.linkedLaField(
                    sla,
                    field_options|merge({
                        'can_assign': can_assign_sla_ola,
                        'rand': _rand,
                        'new_item': item.isNewItem(),
                        'display_datetime_field': display_datetime_field,
                        'display_associatedsla_field': display_associatedsla_field
                    })
                ) }}
                {# @todo gestion du required - 'mandatory': field_options.fields_template.isMandatoryField(la_field.lafieldname), #}
            </td>
        </tr>
    {% endfor %}

    {% if not ticket_has_associated_ttr_sla %}
        <tr>
            {% set display_datetime_field  = field_options.fields_template is not defined or not field_options.fields_template.isHiddenField('time_to_resolve') %}
            {% set display_associatedsla_field = field_options.fields_template is not defined or not field_options.fields_template.isHiddenField('slas_id_ttr') %}
            {% set can_assign_sla_ola = canupdate and has_profile_right('slm', constant('SLM::RIGHT_ASSIGN')) and not field_options.fields_template.isReadonlyField('slas_id_ttr') %}
            {# @todo cleanup - debug - force display #}
{#            {% set display_datetime_field  = true %}#}
{#            {% set display_associatedsla_field = true %}#}

{#            {% set _fieldname = 'time_to_resolve' %}#}
            <td class="right pe-2 align-middle border-0">{{ __('TTR') }}</td>
            <td class="d-flex ms-n2 border-0 py-0">

                {% set _rand = random() %}
                {# state flag #}
                <div class="align-middle my-2 me-2">
                    <i class="ti ti-flag"></i>
                </div>

                {# datetime field #}
                {% if display_datetime_field %}
                    {{ fields.DatetimeLaField(
                        'time_to_resolve',
                        item.fields['time_to_resolve'],
                        __('TTR'),
                        {
                            'rand': _rand,
                            'disabled': not can_assign_sla_ola
                        }) }}
                {% endif %}

                {# no linked ttr : display add button + hidden dropdown #}
                {% if display_associatedsla_field and can_assign_sla_ola %}
                    {{ fields.LinkedLaFieldEmpty(ttr_sla,
                        item,
                        'slas_id_ttr',
                        ttr_sla.getAddConfirmation(),
                        constant('SLM::TTR'),
                        options = {
                            'can_assign': can_assign_sla_ola,
                            'rand': _rand,
                        }) }}
                    {# @todo gestion du required - 'mandatory': field_options.fields_template.isMandatoryField(la_field.lafieldname), #}
                {% endif %}
            </td>
        </tr>
    {% endif %}
    </tbody>

{# --------- OLA display ---------- #}
    <thead>
    <tr class="">
        <th class="visually-hidden"></th>
        <th class="border-0 fs-4">
            <div class="d-flex justify-content-between">
                <div class="">{{ __('OLA') }}</div>
                <div>{{ fields.OlaAddButton('ola_dropdown_placeholder', field_options) }}</div>
            </div>
        </th>
    </tr>
    </thead>
    <tbody>
{% for ola in item.getAssociatedOlas() %}
    <tr>
        {% if ola.type == constant('SLM::TTO') %}
{#            {% set display_datetime_field  = field_options.fields_template is not defined or not field_options.fields_template.isHiddenField('time_to_own') %}#}
            {# @todo voir comment gérer ce choix d'afficher ou pas selon une config #}
{#            {% set display_associatedsla_field = field_options.fields_template is not defined or not field_options.fields_template.isHiddenField('slas_id_tto') %}#}
{#            {% set _fieldname = 'time_to_own' %}#}
            {% set can_assign_sla_ola = canupdate and has_profile_right('slm', constant('SLM::RIGHT_ASSIGN')) and not field_options.fields_template.isReadonlyField('olas_id_tto') %}
            {% set _label = __('TTO') %}
        {% elseif ola.type == constant('SLM::TTR') %}
{#            {% set display_datetime_field  = field_options.fields_template is not defined or not field_options.fields_template.isHiddenField('time_to_resolve') %}#}
{#            {% set display_associatedsla_field  = field_options.fields_template is not defined or not field_options.fields_template.isHiddenField('slas_id_ttr') %}#}
{#            {% set _fieldname = 'time_to_resolve' %}#}
            {% set can_assign_sla_ola = canupdate and has_profile_right('slm', constant('SLM::RIGHT_ASSIGN')) and not field_options.fields_template.isReadonlyField('olas_id_ttr') %}
            {% set _label = __('TTR') %}
        {% endif %}
{#        {% set _value = item.fields[_fieldname] %}#}
        {% set _rand = random() %}

        {# @todo supprimer forcage de debug #}
        {% set display_datetime_field      = true %}
        {% set display_associatedsla_field = true %}

        <td class="right pe-2 align-middle border-0">{{ _label }}</td>
        <td class="d-flex ms-n2 border-0 py-0">
            {{ fields.linkedLaField(
                ola,
                field_options|merge({
                    'can_assign': can_assign_sla_ola,
                    'rand': _rand,
                    'new_item': item.isNewItem(),
                    'display_datetime_field': false,
                    'display_associatedsla_field': display_associatedsla_field
                })
            ) }}
            {# @todo fieldname - 'ola_' ~ ola.id, 'ola[' ~ ola.id ~ ']' #}
            {# @todo gestion du required - 'mandatory': field_options.fields_template.isMandatoryField(la_field.lafieldname), #}

        </td>
    </tr>
{% endfor %}
    <tr>
        <td>&nbsp;</td>
        {# id used by OlaAddButton() - display ajax fetched dropdown #}
        <td id="ola_dropdown_placeholder">
        </td>
    </tr>
    </tbody>

</table>